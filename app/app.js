/**
 *    Main file of the application, generated by Sencha Touch
 *    @author: Ren√© grossmann
 */
// DO NOT DELETE - this directive is required for Sencha Cmd packages to work.
//@require @packageOverrides

//<debug>
Ext.Loader.setPath({
    'Ext': 'touch/src',
    'skiMe': 'app',
    'Ext.ux': 'ux'
});
//</debug>

Ext.application({
    name: 'skiMe',

    icon: {
        '57': 'resources/icons/icon57.png',
        '72': 'resources/icons/icon72.png',
        '114': 'resources/icons/icon114.png',
        '144': 'resources/icons/icon144.png'
    },

    startupImage: {
        '320x460': 'resources/startup/320x460.jpg',
        '640x920': 'resources/startup/640x920.png',
        '768x1004': 'resources/startup/768x1004.png',
        '748x1024': 'resources/startup/748x1024.png',
        '1536x2008': 'resources/startup/1536x2008.png',
        '1496x2048': 'resources/startup/1496x2048.png'
    },

    isIconPrecomposed: true,
    fullscreen: true,

    requires: [
        'skiMe.config.Config',
        'Ext.Toolbar'
    ],

    models: [
        'Piste',
        'Lift',
        'Auth',
        'User',
        'Checkin',
        'Event',
        'Group',
        'GroupMember',
        'Friendship',
        'UserNotification',
        'Picture',
        'Country',
        'MeetingPoint',
        'Webcam',
        'ProfilePicture',
        'Picture',
        'Resort'
    ],
    views: [
        'Login',
        'Slider',
        'MapPanel',
        'FriendsPanel',
        'NotifsPanel',
        'PathMenu',
        'MeetingPointForm',
        'AddFriendPanel',
        'AddedFriendList',
        'UserProfile',
        'GroupForm',
        'GroupProfile',
        'AddGroupPanel',
        'AddedGroupList',
        'StatusForm',
        'ImageCarousel'
    ],
    controllers: [
        'Loader',
        'Slider',
        'MapController',
        'LoginController',
        'MainController',
        'SocketController'
    ],
    stores: [
        'PisteStore',
        'LiftStore',
        'AuthStore',
        'FriendStore',
        'MeetingPointStore',
        'AddedFriendStore',
        'GroupStore',
        'AddedGroupStore',
        'ResortStore'
    ],

    //Global variable
    user: null,
    
    /**
     * At launch, if the authentication token is present, download the User informations. Else display the login view.
     */
    launch: function() {

        var authStore = Ext.getStore('authStore');
        authStore.load();

        if(authStore.getById(1) != null) {

            skiMe.model.User.getProxy().setHeaders(skiMe.config.Config.getSMHeaders());

            skiMe.model.User.load(authStore.getById(1).get('user_id'), { 
                success: function(user) {

                    skiMe.app.user = user;

                    // Destroy the #appLoadingIndicator element
                    Ext.fly('appLoadingIndicator').destroy();

                    Ext.Viewport.add({xtype: 'sliderView'}).show();
                },
                failure: function(el) {
                    authStore.removeAll();

                    // Destroy the #appLoadingIndicator element
                    Ext.fly('appLoadingIndicator').destroy();
                    Ext.Viewport.add({xtype: 'loginView'}).show();
                }
            });
            
        } else {
            // Destroy the #appLoadingIndicator element
            Ext.fly('appLoadingIndicator').destroy();
            Ext.Viewport.add({xtype: 'loginView'}).show(); 
        }        
    },

    onUpdated: function() {
        Ext.Msg.confirm(
            "Application Update",
            "This application has just successfully been updated to the latest version. Reload now?",
            function(buttonId) {
                if (buttonId === 'yes') {
                    window.location.reload();
                }
            }
        );
    }
});